package com.example.pcd;

import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import net.kyori.adventure.text.Component;
import net.kyori.adventure.text.event.ClickEvent;
import net.kyori.adventure.text.format.NamedTextColor;
import org.bukkit.entity.Player;
import org.bukkit.scheduler.BukkitRunnable;

import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URI;
import java.util.Properties;

public class UpdateChecker {

    private final main plugin;
    private final String currentCommit;
    private boolean isUpdateAvailable = false;

    public UpdateChecker(main plugin) {
        this.plugin = plugin;
        this.currentCommit = loadGitCommitId();
    }

    /**
     * Correctly loads the Git commit hash from the git.properties file
     * generated by Maven. This is the only reliable method.
     *
     * @return The short commit hash, or "unknown" if not found.
     */
    private String loadGitCommitId() {
        try (InputStream stream = plugin.getResource("git.properties")) {
            if (stream == null) {
                plugin.getLogger().warning("Could not find git.properties. Update checking will be based on version name.");
                // Fallback to version name if git.properties is missing
                return plugin.getDescription().getVersion();
            }
            Properties properties = new Properties();
            properties.load(stream);
            return properties.getProperty("git.commit.id.abbrev", "unknown");
        } catch (Exception e) {
            plugin.getLogger().warning("Could not load commit information from git.properties.");
            return "unknown"; // Return a safe default value
        }
    }

    public void check() {
        new BukkitRunnable() {
            @Override
            public void run() {
                try {
                    // This now points to your PlayerCustomDisplay repository
                    URI uri = new URI("https://api.github.com/repos/Mike4947/PlayerCustomDisplay/commits/main");
                    HttpURLConnection connection = (HttpURLConnection) uri.toURL().openConnection();
                    connection.setRequestMethod("GET");

                    if (connection.getResponseCode() == 200) {
                        try (InputStreamReader reader = new InputStreamReader(connection.getInputStream())) {
                            JsonObject commitData = JsonParser.parseReader(reader).getAsJsonObject();
                            String latestCommit = commitData.get("sha").getAsString().substring(0, 7);

                            // Compare the commit from GitHub with the one baked into the plugin
                            if (currentCommit != null && !currentCommit.equalsIgnoreCase("unknown") && !currentCommit.equals(latestCommit)) {
                                isUpdateAvailable = true;
                                plugin.getLogger().info("A new version of " + plugin.getName() + " is available on GitHub!");
                            }
                        }
                    }
                    connection.disconnect();
                } catch (Exception e) {
                    plugin.getLogger().warning("Could not check for updates: " + e.getMessage());
                }
            }
        }.runTaskAsynchronously(plugin);
    }

    public void notify(Player player) {
        if (isUpdateAvailable && player.hasPermission("playercustomdisplay.admin")) {
            Component message = Component.text("!WARNING! ", NamedTextColor.YELLOW)
                    .append(Component.text("Your version of PlayerCustomDisplay is OUTDATED. ", NamedTextColor.GRAY))
                    .append(Component.text("[Click here to update]", NamedTextColor.AQUA)
                            // This now correctly points to your PlayerCustomDisplay releases page
                            .clickEvent(ClickEvent.openUrl("https://github.com/Mike4947/PlayerCustomDisplay/releases/latest")));

            player.sendMessage(message);
        }
    }
}